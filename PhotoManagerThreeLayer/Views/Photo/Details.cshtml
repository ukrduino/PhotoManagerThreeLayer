@using PhotoManager.BLL.Services
@model PhotoManagerThreeLayer.ViewModels.PhotoDetailViewModel

<div class="row">
    <div id="photo" value="@Model.Id"></div>
    <h4 style="text-align: center">
    @Model.Title &nbsp;
    @if (Request.IsAuthenticated && WebSecurityService.GetCurrentUserId() == Model.UserId)
    {
        <a href='@Url.Action("Edit", "Photo", new {id = Model.Id})'><span class="glyphicon glyphicon-edit" aria-hidden="true"></span></a><span>&nbsp;</span>
        <a href='@Url.Action("Create", "Photo")'><span class="glyphicon glyphicon-plus" aria-hidden="true"></span></a>
    }
    </h4>
    <hr />
    <div class="col-lg-3">
        <img src="@Url.Action("GetSmallPhotoImage", new {id = Model.Id})" class="smallImage" />
    </div>
    <div class="col-lg-9">
        <dl class="dl-horizontal">
            <dt>
                @Html.DisplayNameFor(model => model.Title)
            </dt>

            <dd>
                @Html.DisplayFor(model => model.Title)
            </dd>

            <dt>
                @Html.DisplayNameFor(model => model.Description)
            </dt>

            <dd>
                @Html.DisplayFor(model => model.Description)
            </dd>

            <dt>
                @Html.DisplayNameFor(model => model.TakenDate)
            </dt>

            <dd>
                @Html.DisplayFor(model => model.TakenDate)
            </dd>

            <dt>
                @Html.DisplayNameFor(model => model.Place)
            </dt>

            <dd>
                @Html.DisplayFor(model => model.Place)
            </dd>

            <dt>
                @Html.DisplayNameFor(model => model.Camera)
            </dt>

            <dd>
                @Html.DisplayFor(model => model.Camera)
            </dd>

            <dt>
                @Html.DisplayNameFor(model => model.FocalLength)
            </dt>

            <dd>
                @Html.DisplayFor(model => model.FocalLength)
            </dd>

            <dt>
                @Html.DisplayNameFor(model => model.Aperture)
            </dt>

            <dd>
                @Html.DisplayFor(model => model.Aperture)
            </dd>

            <dt>
                @Html.DisplayNameFor(model => model.CameraLockSpeed)
            </dt>

            <dd>
                @Html.DisplayFor(model => model.CameraLockSpeed)
            </dd>

            <dt>
                @Html.DisplayNameFor(model => model.ISO)
            </dt>

            <dd>
                @Html.DisplayFor(model => model.ISO)
            </dd>

            <dt>
                @Html.DisplayNameFor(model => model.UsedFlash)
            </dt>

            <dd>
                @Html.DisplayFor(model => model.UsedFlash)
            </dd>

            <dt>
                @Html.DisplayNameFor(model => model.Modified)
            </dt>

            <dd>
                @Html.DisplayFor(model => model.Modified)
            </dd>

            <dt>
                @Html.DisplayNameFor(model => model.Created)
            </dt>

            <dd>
                @Html.DisplayFor(model => model.Created)
            </dd>

            <dt>
                @Html.DisplayNameFor(model => model.AnyOneCanSee)
            </dt>

            <dd>
                @Html.DisplayFor(model => model.AnyOneCanSee)
            </dd>
        </dl>
    </div>
</div>
@if (WebSecurityService.IsAuthenticated)
{
    using (Html.BeginForm("CreateComment", "Photo"))
    {
        @Html.AntiForgeryToken()
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <input type="hidden" name="PhotoId" value="@Model.Id" />
        <label>Comment:</label>
            <div class="row">
                <div class="col-lg-11">
                    <div class="form-group">
                        <input class="form-control" name="Text" style="max-width: 100%">
                        @Html.ValidationMessage("EmptyMessageError", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="col-lg-1">
                    <div class="form-group">
                        <input type="submit" class="btn btn-success" value="Add Comment"/>
                    </div>
                </div>
            </div>
    }
}
<div id="newComments"></div>

@foreach (var item in Model.Comments)
{
    @Html.Partial("_CommentItem", item)
}

@Scripts.Render("~/bundles/unobtrusiveAjax")
